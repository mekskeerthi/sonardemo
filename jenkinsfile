pipeline {
    agent any 

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/mekskeerthi/sonardemo.git' 
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install' 
            }
        }
        stage('SonarQube Analysis') {
            steps {
                // Configure SonarQube Scanner
                withSonarQubeEnv('sonarserver') {
                    sh 'mvn sonar:sonar \
                        -Dsonar.host.url=http://localhost:9000 \
                         -Dsonar.token=squ_a55495fafd9c407a248263fe8b2de9d89da8b912' 
                         
                }
            }
        }
    }
     post {
        success {
            emailext(
                subject: "Build Successful: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "The build was successful. See details at: ${env.BUILD_URL}"
            )
        }
        failure {
            emailext(
                subject: "Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "The build failed. See details at: ${env.BUILD_URL}"
            )
        }
    }


}
